/*
 * ECare API
 * ECare Core Web API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PatientClinicDto;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PatientClinicDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-01-15T10:03:33.818+03:00[Europe/Istanbul]")public class PatientClinicDto {

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("parentId")
  private String parentId = null;

  @SerializedName("childs")
  private List<PatientClinicDto> childs = null;
  public PatientClinicDto id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public PatientClinicDto name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public PatientClinicDto parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  

  /**
  * Get parentId
  * @return parentId
  **/
  @Schema(description = "")
  public String getParentId() {
    return parentId;
  }
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }
  public PatientClinicDto childs(List<PatientClinicDto> childs) {
    this.childs = childs;
    return this;
  }

  public PatientClinicDto addChildsItem(PatientClinicDto childsItem) {
    if (this.childs == null) {
      this.childs = new ArrayList<PatientClinicDto>();
    }
    this.childs.add(childsItem);
    return this;
  }

  /**
  * Get childs
  * @return childs
  **/
  @Schema(description = "")
  public List<PatientClinicDto> getChilds() {
    return childs;
  }
  public void setChilds(List<PatientClinicDto> childs) {
    this.childs = childs;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatientClinicDto patientClinicDto = (PatientClinicDto) o;
    return Objects.equals(this.id, patientClinicDto.id) &&
        Objects.equals(this.name, patientClinicDto.name) &&
        Objects.equals(this.parentId, patientClinicDto.parentId) &&
        Objects.equals(this.childs, patientClinicDto.childs);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, name, parentId, childs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatientClinicDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    childs: ").append(toIndentedString(childs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
